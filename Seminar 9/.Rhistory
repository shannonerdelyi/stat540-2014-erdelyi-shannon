head(des)
dir <- "/Users/shannonerdelyi/Dropbox/UBC/W2014/STAT 540"
dat <- read.table(paste(dir, "/Data/GSE4051_data.tsv", sep=""),
header=T, row.names=1)
des <- read.table(paste(dir, "/Data/GSE4051_design.tsv", sep=""), header=T)
sDat <- t(scale(t(dat)))
head(dat)
ed <- dist(t(sDat), method="euclidean")
des$int <- with(des, interaction(gType, Devstage))
des$int <- with(des, interaction(gType, devStage))
des
ed <- dist(t(sDat), method="euclidean")
hcS <- hclust(ed, method = 'single')
hcC <- hclust(ed, method = 'complete')
hcA <- hclust(ed, method = 'average')
hcW <- hclust(ed, method = 'ward')
k <- 3
rect.hclust(hcS, k=3)
summary(hcC)
cutree(hcS, k=k)
des
clusters <- data.frame(des,
hcS=cutree(hcS, k=k),
hcC=cutree(hcC, k=k),
hcA=cutree(hcA, k=k),
hcW=cutree(hcW, k=k))
clusters
set.seed(8)
km <- kmeans(t(sDat), centers=k, nstart=50)
clusters$km <- km$cluster
cluster
clusters
pam <- (ed, k=k)
pam <- pam(ed, k=k)
pam
str(pam)
clusters$pam <- pam$clustering
clusters
library(ggplot2)
ggplot(clusters) +
geom_bar(hcS)
ggplot(clusters) +
geom_bar(devStage)
ggplot(clusters) +
geom_histogram(devStage)
head(clusters)
ggplot(clusters) +
geom_histogram(devStage)
geom_histogram(aes(devStage))
ggplot(clusters) +
geom_histogram(aes(devStage))
table(clusters$devStage)
ggplot(clusters) +
geom_histogram(aes(devStage, colour=hcS))
ggplot(clusters) +
geom_histogram(aes(devStage, fill=hcS))
ggplot(clusters) +
geom_histogram(aes(devStage, fill=factor(hcS)))
ggplot(clusters) +
geom_bar(aes(devStage, fill=factor(hcS)))
ggplot(clusters) +
aes(devStage) +
geom_bar(fill=factor(hcS)))
ggplot(clusters) +
aes(devStage) +
geom_bar(fill=factor(hcS))
ggplot(clusters) +
aes(devStage) +
geom_bar(aes(fill=factor(hcS)))
head(clust)
head(cluster)
head(clusters)
>reshape
?reshape
reshape(clusters, varying=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
v.names="method", direction="long")
reshape(clusters, varying=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
v.names="method", times=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
direction="long")
reshape(clusters,
v.names="cluster", varying=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
timevar="method", times=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
direction="long")
long <- reshape(clusters, timevar="method", v.names="cluster",
varying=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
times=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
direction="long")
ggplot(long) +
aes(devStage) +
geom_bar(aes(fill=factor(hcS))) +
facet_wrap(~method)
head(long)
ggplot(long) +
aes(devStage) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method)
?factor
levels(des$dev)
with(des, factor(devStage, levels=c("E16", "P2", "P6", "P10", "4_weeks")))
des$factor <- with(des, factor(devStage,
levels=c("E16", "P2", "P6", "P10", "4_weeks")))
clusters <- data.frame(des,
hcS=cutree(hcS, k=k),
hcC=cutree(hcC, k=k),
hcA=cutree(hcA, k=k),
hcW=cutree(hcW, k=k))
clusters$km <- km$cluster
clusters$pam <- pam$clustering
# reshape cluster data
long <- reshape(clusters, timevar="method", v.names="cluster",
varying=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
times=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
direction="long")
ggplot(long) +
aes(devStage) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method)
dir <- "/Users/shannonerdelyi/Dropbox/UBC/W2014/STAT 540"
dat <- read.table(paste(dir, "/Data/GSE4051_data.tsv", sep=""),
header=T, row.names=1)
des <- read.table(paste(dir, "/Data/GSE4051_design.tsv", sep=""), header=T)
# scale data
sDat <- t(scale(t(dat)))
# create interaction term
des$int <- with(des, interaction(gType, devStage))
# reorder devStage
des$devStage <- with(des, factor(devStage,
levels=c("E16", "P2", "P6", "P10", "4_weeks")))
# get cluster assignment
clusters <- data.frame(des,
hcS=cutree(hcS, k=k),
hcC=cutree(hcC, k=k),
hcA=cutree(hcA, k=k),
hcW=cutree(hcW, k=k))
clusters$km <- km$cluster
clusters$pam <- pam$clustering
long <- reshape(clusters, timevar="method", v.names="cluster",
varying=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
times=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
direction="long")
ggplot(long) +
aes(devStage) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method)
head(long)
ggplot(long) +
aes(gType) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method)
ggplot(long) +
aes(int) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method)
ggplot(long) +
aes(devStage) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method)
ggplot(long) +
aes(devStage) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method*int)
ggplot(long) +
aes(devStage) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method)
ggplot(long) +
aes(int) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method) +
main("Cluster Assignment")
ggplot(long) +
aes(int) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method) +
title("Cluster Assignment")
ggplot(long) +
aes(int) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method) +
ggtitle("Cluster Assignment")
ggplot(long) +
aes(int) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method) +
ggtitle("Cluster Assignment") +
xlab(rot=90)
?xlab
ggplot(long) +
aes(int) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method) +
ggtitle("Cluster Assignment") +
theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(long) +
aes(gType) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method) +
ggtitle("Cluster Assignment") +
theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(long) +
aes(int) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method) +
ggtitle("Cluster Assignment") +
theme(axis.text.x=element_text(angle=90, hjust=1))
# libraries
library(RColorBrewer)
library(cluster)
library(pvclust)
library(xtable)
library(limma)
library(plyr)
library(ggplot2)
# data
dir <- "/Users/shannonerdelyi/Dropbox/UBC/W2014/STAT 540"
dat <- read.table(paste(dir, "/Data/GSE4051_data.tsv", sep=""),
header=T, row.names=1)
des <- read.table(paste(dir, "/Data/GSE4051_design.tsv", sep=""), header=T)
# scale data
sDat <- t(scale(t(dat)))
# create interaction term
des$int <- with(des, interaction(gType, devStage))
# reorder devStage
des$devStage <- with(des, factor(devStage,
levels=c("E16", "P2", "P6", "P10", "4_weeks")))
```
k <- 3
# distance
ed <- dist(t(sDat), method="euclidean")
# clustering
hcS <- hclust(ed, method = 'single')
hcC <- hclust(ed, method = 'complete')
hcA <- hclust(ed, method = 'average')
hcW <- hclust(ed, method = 'ward')
# get cluster assignment
clusters <- data.frame(des,
hcS=cutree(hcS, k=k),
hcC=cutree(hcC, k=k),
hcA=cutree(hcA, k=k),
hcW=cutree(hcW, k=k))
set.seed(8)
km <- kmeans(t(sDat), centers=k, nstart=50)
clusters$km <- km$cluster
pam <- pam(ed, k=k)
clusters$pam <- pam$clustering
long <- reshape(clusters, timevar="method", v.names="cluster",
varying=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
times=c("hcS", "hcC", "hcA", "hcW", "km", "pam"),
direction="long")
# plot cluster assignments
ggplot(long) +
aes(int) +
geom_bar(aes(fill=factor(cluster))) +
facet_wrap(~method) +
ggtitle("Cluster Assignment") +
theme(axis.text.x=element_text(angle=90, hjust=1))
pcs <- prcomp(sDat, center=F, scale=F)
plot(pcs)
pca <- cbind(des, pcs$rotation[des$sidNum, 1:10])
pcs
plot(pca[ ,c("sidNum", "devStage", "gType", "PC1", "PC2", "PC3")],
pch = 19, cex = 0.8)
names(pcs)
plot(pcs[ ,c("PC1","PC2")], bg=des$devStage, pch = 21, cex = 1.5)
plot(pca[ ,c("PC1","PC2")], bg=des$devStage, pch = 21, cex = 1.5)
legend(list(x = 0.2, y = 0.3), as.character(levels(des$devStage)),
pch = 21, pt.bg = c(1,2,3,4,5))
plot(pca[ ,c("PC1","PC2")], bg=des$devStage, pch = 21, cex = 1.5)
pc <- prcomp(sDat, center=F, scale=F)
plot(pc)
head(pc)
str(pc)
head(pc$rot)
des$sidNum
pca <- cbind(des, pc$rotation[des$sidNum, ])
pcs
plot(pca[ ,c("sidNum", "devStage", "gType", "PC1", "PC2", "PC3")],
pch = 19, cex = 0.8)
pca <- prcomp(sDat, center=F, scale=F)
pc <- cbind(des, pca$rotation[des$sidNum, ])
head(pc)
library(lattice)
splom(pc[ ,c("devStage", "gType", "PC1", "PC2", "PC3")],
panel=panel.hexbinplot,
colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Sample scatter plot matrix",
diag.panel=function(x, ...){
yLim <- current.panel.limits()$ylim
d <- density(x, na.rm=TRUE)
d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, ...)
})
splom(pc[ ,c("devStage", "gType", "PC1", "PC2", "PC3")],
panel=panel.hexbinplot,
#colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Sample scatter plot matrix",
diag.panel=function(x, ...){
yLim <- current.panel.limits()$ylim
d <- density(x, na.rm=TRUE)
d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
#panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, ...)
})
library(hexbin)
splom(pc[ ,c("devStage", "gType", "PC1", "PC2", "PC3")],
panel=panel.hexbinplot,
#colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Sample scatter plot matrix",
diag.panel=function(x, ...){
yLim <- current.panel.limits()$ylim
d <- density(x, na.rm=TRUE)
d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
#panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, ...)
})
splom(pc[ ,c("devStage", "gType", "PC1", "PC2", "PC3")],
panel=panel.hexbinplot,
#colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Sample scatter plot matrix",
diag.panel=function(x, ...){
#yLim <- current.panel.limits()$ylim
#d <- density(x, na.rm=TRUE)
#d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
#panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, ...)
})
splom(pc[ ,c("devStage", "gType", "PC1", "PC2", "PC3")],
panel=panel.hexbinplot,
#colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Sample scatter plot matrix",
diag.panel=function(x, ...){
#yLim <- current.panel.limits()$ylim
#d <- density(x, na.rm=TRUE)
#d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
#panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, ...)
})
pc[ ,c("devStage", "gType", "PC1", "PC2", "PC3")]
splom(pc[ ,c("PC1", "PC2", "PC3")],
panel=panel.hexbinplot,
#colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Sample scatter plot matrix",
diag.panel=function(x, ...){
#yLim <- current.panel.limits()$ylim
#d <- density(x, na.rm=TRUE)
#d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
#panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, ...)
})
scatter <- pc[ ,c("devStage", "gType", "PC1", "PC2", "PC3")]
str(scatter)
splom(scatter,
panel=panel.hexbinplot,
#colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Scatter plot matrix",
diag.panel=function(x, ...){
#yLim <- current.panel.limits()$ylim
#d <- density(x, na.rm=TRUE)
#d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
#panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, ...)
})
apply(scatter, 2, as.numeric)
str(scater)
str(scatter)
as.numeric(scatter$devStage)
s.numeric(scatter$devStage)
as.numeric(scatter$devStage)
scatter$devStage
scatter$devStage <- as.numeric(scatter$devStage)
scatter$gType <- as.numeric(scatter$gType)
str(scatter)
splom(scatter,
panel=panel.hexbinplot,
#colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Scatter plot matrix",
diag.panel=function(x, ...){
#yLim <- current.panel.limits()$ylim
#d <- density(x, na.rm=TRUE)
#d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
#panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, ...)
})
splom(scatter,
#panel=panel.hexbinplot,
#colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Scatter plot matrix",
diag.panel=function(x, ...){
#yLim <- current.panel.limits()$ylim
#d <- density(x, na.rm=TRUE)
#d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
#panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, ...)
})
splom(scatter,
#panel=panel.hexbinplot,
#colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Scatter plot matrix",
diag.panel=function(x, ...){
#yLim <- current.panel.limits()$ylim
#d <- density(x, na.rm=TRUE)
#d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
#panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, pch=16, ...)
})
splom(scatter,
#panel=panel.hexbinplot,
#colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Scatter plot matrix",
diag.panel=function(x, ...){
#yLim <- current.panel.limits()$ylim
#d <- density(x, na.rm=TRUE)
#d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
#panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, pch=16, ...)
})
splom(scatter,
pch=16,
#panel=panel.hexbinplot,
#colramp=colorRampPalette(myCols(10)[c(5, 10)]),
pscale=0,
xlab=NULL,
main="Scatter plot matrix",
diag.panel=function(x, ...){
#yLim <- current.panel.limits()$ylim
#d <- density(x, na.rm=TRUE)
#d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
#panel.lines(d, col=myCols(10)[6])
diag.panel.splom(x, ...)
})
splom(scatter,
pch=16, col=1,
pscale=0,
xlab=NULL,
main="Scatter plot matrix",
diag.panel=function(x, ...){
yLim <- current.panel.limits()$ylim
d <- density(x, na.rm=TRUE)
d$y <- with(d, yLim[1]+0.95*diff(yLim)*y/max(y))
panel.lines(d, col=1)
diag.panel.splom(x, ...)
})
plot(pca[ ,c("PC1","PC2")], bg=des$devStage, pch = 21, cex = 1.5)
legend(list(x = 0.2, y = 0.3), as.character(levels(des$devStage)),
pch = 21, pt.bg = c(1,2,3,4,5))
plot(pc[ ,c("PC1","PC2")], bg=des$devStage, pch = 21, cex = 1.5)
legend(list(x = 0.2, y = 0.3), as.character(levels(des$devStage)),
pch = 21, pt.bg = c(1,2,3,4,5))
ggplot(pc) +
aes(PC1, PC2, colour=devStage) +
geom_point()
?aes
ggplot(pc) +
aes(PC1, PC2, colour=devStage, group=devStage) +
geom_point() +
ggtitle("PC2 vs PC1")
ggplot(pc) +
aes(PC1, PC2, colour=devStage) +
geom_point(cex=2) +
ggtitle("PC2 vs PC1")
ggplot(pc) +
aes(PC1, PC2, colour=devStage) +
geom_point(size=2) +
ggtitle("PC2 vs PC1")
ggplot(pc) +
aes(PC1, PC2, colour=devStage, shape=devStage) +
geom_point(size=2) +
ggtitle("PC2 vs PC1")
ggplot(pc) +
aes(PC1, PC2, colour=devStage, shape=devStage) +
geom_point(size=5) +
ggtitle("PC2 vs PC1")
ggplot(pc) +
aes(PC1, PC2, colour=devStage, shape=devStage) +
geom_point(size=5) +
ggtitle("PC2 vs PC1") +
facet_wrap(~gType)
ggplot(pc) +
aes(PC1, PC2, colour=devStage, shape=gType) +
geom_point(size=5) +
ggtitle("PC2 vs PC1")
facet_wrap(~gType)
ggplot(pc) +
aes(PC1, PC2, colour=devStage, shape=devStage) +
geom_point(size=5) +
ggtitle("PC2 vs PC1") +
facet_wrap(~gType)
?prcomp
?pam
